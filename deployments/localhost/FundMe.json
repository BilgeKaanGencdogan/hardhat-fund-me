{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x148b295ec2410983ff7f4096ed53f3457a76e4e51c572f0b30d93138295357de",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1031606",
        "logsBloom": "0x
        "blockHash": "0xae58185699a097b9890456dd0133b900adfd1df5906baf5362bf68bbe4edefd7",
        "transactionHash": "0x148b295ec2410983ff7f4096ed53f3457a76e4e51c572f0b30d93138295357de",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1031606",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "74f7b293ff2e351057c9c37ac9c58dbc",
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Bilge Kaan Gen\\u00e7do\\u011fan\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\n//Pragma\\npragma solidity 0.8.7;\\n\\n//imports\\nimport \\\"./PriceConvertor.sol\\\";\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//Error codes\\nerror FundMe__NotOwner();\\n\\n//Interfaces, Libraries, Contracts\\n\\n// creating this contract costs 771,527 gas\\n\\n/**\\n * @title  A contract for crowd funding\\n * @author Bilge Kaan Gen\\u00e7do\\u011fan\\n * @notice This contract is to demo a sample funding\\n * @dev    This implements price feeds as our library\\n */\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConvertor for uint256;\\n\\n    //State Variables!!\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    //s_ is representing storage, variables with s is strage varibles\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    //Funtion Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev    This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess /* bytes memory dataReturned */, ) = payable(\\n            msg.sender\\n        ).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Send Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        //mappings cannot be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    // View / Pure\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xdec275d7ee3748e1a700f7996c78a55d18e2c6011f47cf904e64ef74cf66c5db\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (\\n            ,\\n            /*uint80 roundID*/ int256 price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xd68d92a25830ed50f480807ad94b446b24c6e8cac48189192230d0206dd149fd\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d0380380620012d08339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c61114a620001866000396000818161034401528181610593015281816105e301526107d9015261114a6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa2565b6102f9565b6040516100cc9190610c98565b60405180910390f35b3480156100e157600080fd5b506100ea610342565b005b3480156100f857600080fd5b50610101610582565b60405161010e9190610c98565b60405180910390f35b34801561012357600080fd5b5061012c61058f565b6040516101399190610c22565b60405180910390f35b34801561014e57600080fd5b506101576105b7565b6040516101649190610c3d565b60405180910390f35b6101756101be565b005b61017f6105e1565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610acf565b61086f565b6040516101b59190610c22565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c58565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f09190610ccf565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104725760008082815481106103ec576103eb611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046a90610f59565b9150506103ca565b50600067ffffffffffffffff81111561048e5761048d61102f565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600090805190602001906104d2929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f990610c0d565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610c78565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610666576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069f575b5050505050905060005b815181101561077457600082828151811061071157610710611000565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076c90610f59565b9150506106f3565b50600067ffffffffffffffff8111156107905761078f61102f565b5b6040519080825280602002602001820160405280156107be5781602001602082028036833780820191505090505b50600090805190602001906107d4929190610992565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081b90610c0d565b60006040518083038185875af1925050503d8060008114610858576040519150601f19603f3d011682016040523d82523d6000602084013e61085d565b606091505b505090508061086b57600080fd5b5050565b600080828154811061088457610883611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610e6d565b6108e59190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610afc565b5050509150506402540be4008161098a9190610d56565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600081359050610a48816110b8565b92915050565b600081519050610a5d816110cf565b92915050565b600081359050610a72816110e6565b92915050565b600081519050610a87816110e6565b92915050565b600081519050610a9c816110fd565b92915050565b600060208284031215610ab857610ab761105e565b5b6000610ac684828501610a39565b91505092915050565b600060208284031215610ae557610ae461105e565b5b6000610af384828501610a63565b91505092915050565b600080600080600060a08688031215610b1857610b1761105e565b5b6000610b2688828901610a8d565b9550506020610b3788828901610a4e565b9450506040610b4888828901610a78565b9350506060610b5988828901610a78565b9250506080610b6a88828901610a8d565b9150509295509295909350565b610b8081610ec7565b82525050565b610b8f81610f23565b82525050565b6000610ba2601b83610cbe565b9150610bad82611063565b602082019050919050565b6000610bc5600b83610cbe565b9150610bd08261108c565b602082019050919050565b6000610be8600083610cb3565b9150610bf3826110b5565b600082019050919050565b610c0781610f03565b82525050565b6000610c1882610bdb565b9150819050919050565b6000602082019050610c376000830184610b77565b92915050565b6000602082019050610c526000830184610b86565b92915050565b60006020820190508181036000830152610c7181610b95565b9050919050565b60006020820190508181036000830152610c9181610bb8565b9050919050565b6000602082019050610cad6000830184610bfe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cda82610f03565b9150610ce583610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1a57610d19610fa2565b5b828201905092915050565b6000610d3082610f03565b9150610d3b83610f03565b925082610d4b57610d4a610fd1565b5b828204905092915050565b6000610d6182610ed9565b9150610d6c83610ed9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dab57610daa610fa2565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610de857610de7610fa2565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e2557610e24610fa2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e6257610e61610fa2565b5b828202905092915050565b6000610e7882610f03565b9150610e8383610f03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ebc57610ebb610fa2565b5b828202905092915050565b6000610ed282610ee3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f2e82610f35565b9050919050565b6000610f4082610f47565b9050919050565b6000610f5282610ee3565b9050919050565b6000610f6482610f03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9757610f96610fa2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b50565b6110c181610ec7565b81146110cc57600080fd5b50565b6110d881610ed9565b81146110e357600080fd5b50565b6110ef81610f03565b81146110fa57600080fd5b50565b61110681610f0d565b811461111157600080fd5b5056fea26469706673582212208ddc343eae766cb2353d4ae1171368db0cfd806dee32ac153be0955b94d6638764736f6c63430008070033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa2565b6102f9565b6040516100cc9190610c98565b60405180910390f35b3480156100e157600080fd5b506100ea610342565b005b3480156100f857600080fd5b50610101610582565b60405161010e9190610c98565b60405180910390f35b34801561012357600080fd5b5061012c61058f565b6040516101399190610c22565b60405180910390f35b34801561014e57600080fd5b506101576105b7565b6040516101649190610c3d565b60405180910390f35b6101756101be565b005b61017f6105e1565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610acf565b61086f565b6040516101b59190610c22565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c58565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f09190610ccf565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104725760008082815481106103ec576103eb611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046a90610f59565b9150506103ca565b50600067ffffffffffffffff81111561048e5761048d61102f565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600090805190602001906104d2929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f990610c0d565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610c78565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610666576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069f575b5050505050905060005b815181101561077457600082828151811061071157610710611000565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076c90610f59565b9150506106f3565b50600067ffffffffffffffff8111156107905761078f61102f565b5b6040519080825280602002602001820160405280156107be5781602001602082028036833780820191505090505b50600090805190602001906107d4929190610992565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081b90610c0d565b60006040518083038185875af1925050503d8060008114610858576040519150601f19603f3d011682016040523d82523d6000602084013e61085d565b606091505b505090508061086b57600080fd5b5050565b600080828154811061088457610883611000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610e6d565b6108e59190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610afc565b5050509150506402540be4008161098a9190610d56565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600081359050610a48816110b8565b92915050565b600081519050610a5d816110cf565b92915050565b600081359050610a72816110e6565b92915050565b600081519050610a87816110e6565b92915050565b600081519050610a9c816110fd565b92915050565b600060208284031215610ab857610ab761105e565b5b6000610ac684828501610a39565b91505092915050565b600060208284031215610ae557610ae461105e565b5b6000610af384828501610a63565b91505092915050565b600080600080600060a08688031215610b1857610b1761105e565b5b6000610b2688828901610a8d565b9550506020610b3788828901610a4e565b9450506040610b4888828901610a78565b9350506060610b5988828901610a78565b9250506080610b6a88828901610a8d565b9150509295509295909350565b610b8081610ec7565b82525050565b610b8f81610f23565b82525050565b6000610ba2601b83610cbe565b9150610bad82611063565b602082019050919050565b6000610bc5600b83610cbe565b9150610bd08261108c565b602082019050919050565b6000610be8600083610cb3565b9150610bf3826110b5565b600082019050919050565b610c0781610f03565b82525050565b6000610c1882610bdb565b9150819050919050565b6000602082019050610c376000830184610b77565b92915050565b6000602082019050610c526000830184610b86565b92915050565b60006020820190508181036000830152610c7181610b95565b9050919050565b60006020820190508181036000830152610c9181610bb8565b9050919050565b6000602082019050610cad6000830184610bfe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cda82610f03565b9150610ce583610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1a57610d19610fa2565b5b828201905092915050565b6000610d3082610f03565b9150610d3b83610f03565b925082610d4b57610d4a610fd1565b5b828204905092915050565b6000610d6182610ed9565b9150610d6c83610ed9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dab57610daa610fa2565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610de857610de7610fa2565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e2557610e24610fa2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e6257610e61610fa2565b5b828202905092915050565b6000610e7882610f03565b9150610e8383610f03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ebc57610ebb610fa2565b5b828202905092915050565b6000610ed282610ee3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f2e82610f35565b9050919050565b6000610f4082610f47565b9050919050565b6000610f5282610ee3565b9050919050565b6000610f6482610f03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9757610f96610fa2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b50565b6110c181610ec7565b81146110cc57600080fd5b50565b6110d881610ed9565b81146110e357600080fd5b50565b6110ef81610f03565b81146110fa57600080fd5b50565b61110681610f0d565b811461111157600080fd5b5056fea26469706673582212208ddc343eae766cb2353d4ae1171368db0cfd806dee32ac153be0955b94d6638764736f6c63430008070033",
    "devdoc": {
        "author": "Bilge Kaan Gençdoğan",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements price feeds as our library"
            }
        },
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo a sample funding",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 329,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 333,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 338,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)104"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)104": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
